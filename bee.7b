project  =rustcom
main=rust${~/~}commander
common =..${~/~}simscript${~/~}comm-build.7b:file
crate_dir=..${~/~}crates
comp opts=[]

version=1.05-dev
simhttp proj=..${~/~}simhttp
simupload proj=..${~/~}simupload

if {
	eq(${~os~},windows)
	then {
		assign(ext,.exe)
		assign(script ext,.bat)
		assign(script,START /B .\bin\simhttp.exe %1)
	}
	else {
		assign(ext,)
		assign(script ext,.sh)
		assign(script,"#!/bin/sh
./bin/simhttp $1&")
	}
}

set_env(VERSION,version)
mode=mode:prop
if {
	eq(mode,release) then {
		array(-C,opt-level=3)
		assign(comp opts, ~~)
	}
}

target kill {
	dependency{true}
	display( ps aux | grep ./bin/simhttp | awk {'print$2'} | xargs kill >/dev/null 2>&1)
}

target package {
    dependency {
        target(build)
    }
	dependency{true}
	http conf="{
   \"bind\" : \"0.0.0.0\",
   \"port\" : 3000,
   \"threads\" : 40,
   \"no terminal\": true,
   \"mapping\" : ["
    read(.${~/~}cfg${~/~}http.conf)
    assign(http conf,"${http conf}${~~}],")
    assign(http conf,"${http conf}
    \"log\" : {
          \"out\": {
                  \"out _comment_\": \"file|stdout\",
                  \"name\": \"simcom-${0}\",
                  \"path\":\".${~/~}log\",
                  \"max lines\": 59000,
                  \"max files\": 20
          },
          \"level\":2
    },")
    read(.${~/~}cfg${~/~}mime.conf)
    assign(http conf,"${http conf}${~~}}")
	zip(.${~/~}simcom-${version}.zip,
	-B ${project}/bin,
	rustcom${ext},
	-A ${project}/env.conf,
	${http conf},
	-B ${project}/bin,
	${simupload proj}${~/~}simupld${ext},
	-B ${project}/bin,
	${simupload proj}${~/~}simdown${ext},
	-B ${project}/bin,
	${simhttp proj}${~/~}simhttp${ext},
	-B ${project}/html,
	.${~/~}html${~/~}index.html,
	-B ${project}/html,
	.${~/~}html${~/~}favicon.ico,
	-B ${project}/html/js,
	.${~/~}js${~/~}common.js,
	-E ${project}/simcom${script ext},
	"${script}",
	-A ${project}/log/readme.txt,
	This directory is intentionally empty) 
}
#
include(common);